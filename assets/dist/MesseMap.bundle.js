/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/MesseMap.js":
/*!****************************!*\
  !*** ./src/js/MesseMap.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _scss_MesseMap_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/MesseMap.scss */ \"./src/scss/MesseMap.scss\");\n/* harmony import */ var _utils_MapProviders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/MapProviders.js */ \"./src/js/utils/MapProviders.js\");\n/* harmony import */ var _utils_ScrollBar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/ScrollBar.js */ \"./src/js/utils/ScrollBar.js\");\n/* harmony import */ var _utils_SmoothWheelZoom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/SmoothWheelZoom.js */ \"./src/js/utils/SmoothWheelZoom.js\");\n/* harmony import */ var _utils_SmoothWheelZoom_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_utils_SmoothWheelZoom_js__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nvar jsPDF = window.jspdf.jsPDF;\nvar CONST = {\n  VERSION: '1.0.0',\n  DEBUG: false\n};\n\n/**\r\n * @class\r\n * @constructor\r\n * @public\r\n**/\nvar MesseMap = /*#__PURE__*/function () {\n  /**\r\n   * @summary The MesseMap main component\r\n   * @author Arthur Beaulieu\r\n   * @since October 2022\r\n   * @description\r\n   * <blockquote>\r\n   * The MesseMap class is made to handle the whole application, its interactivity\r\n   * and all its user events. It hold the code to generate the poster output and serve\r\n   * it to the user. (see README.md for further details about used libraries).\r\n   * This constructor will initialize the Leaflet map and all its manipulators and will\r\n   * then listen to user events for text and export settings.\r\n   * </blockquote>\r\n   **/\n  function MesseMap() {\n    _classCallCheck(this, MesseMap);\n    if (CONST.DEBUG) {\n      console.log('MesseMap constructor called');\n    }\n    /**\r\n     * The core Leaflet.js map\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._map = null;\n    /**\r\n     * The Leaflet control search object\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._search = null;\n    /**\r\n     * The flag to ensure all tiles are loaded before printing canvas to image\r\n     * @type {Boolean}\r\n     * @private\r\n     **/\n    this._tilesLoaded = false;\n    /**\r\n     * The flag to ensure the comment can be updated with center lat/lng\r\n     * @type {Boolean}\r\n     * @private\r\n     **/\n    this._commentEdited = false;\n    /**\r\n     * setInterval ID used to frequently ask for printing (only if tiles are loaded)\r\n     * @type {Number}\r\n     * @private\r\n     **/\n    this._intervalId = -1;\n    /**\r\n     * Hold default or saved theme colors (light/dark)\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._cssTheme = {};\n    /**\r\n     * The currently applied language\r\n     * @type {String}\r\n     * @private\r\n     **/\n    this._lang = localStorage.getItem('lang') || 'fr';\n    /**\r\n     * The nls file that holds language key values\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._nls = {};\n    /**\r\n     * The aside scrollbar component\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._scroll = null;\n    this._data = {\n      orientation: 'horizontal',\n      style: 'standard',\n      darkTheme: false,\n      upText: false,\n      layer: 'Imagery (E)'\n    };\n\n    // Begin the initialization sequence (interface and events)\n    this._initInterface().then(this._initMap.bind(this)).then(this._initEvents.bind(this)).then(this._endStartup.bind(this))[\"catch\"](function (error) {\n      return console.error(error);\n    });\n  }\n\n  // ======================================================================= //\n  // ----------------- Application initialization sequence ----------------- //\n  // ======================================================================= //\n\n  /**\r\n   * @method\r\n   * @name _initInterface\r\n   * @private\r\n   * @memberof MesseMap\r\n   * @author Arthur Beaulieu\r\n   * @since November 2022\r\n   * @description\r\n   * <blockquote>\r\n   * This method will fetch the proper lang file and then will update the interface accordingly\r\n   * </blockquote>\r\n   * @returns {Promise} A resolved or rejected Promise\r\n   **/\n  _createClass(MesseMap, [{\n    key: \"_initInterface\",\n    value: function _initInterface() {\n      var _this = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._initInterface() called');\n      }\n      return new Promise(function (resolve, reject) {\n        // Get lang from storage, or use default\n        if (!localStorage.getItem('lang')) {\n          localStorage.setItem('lang', _this._lang);\n        }\n        // Then fetch and update UI with proper language\n        fetch(\"assets/nls/\".concat(_this._lang, \".json\")).then(function (data) {\n          data.text().then(function (lang) {\n            _this._nls = JSON.parse(lang);\n            _this.replaceString(document.body, '{{TITLE}}', _this._nls.title);\n            _this.replaceString(document.body, '{{HELPER}}', _this._nls.helper);\n            _this.replaceString(document.body, '{{ORIENTATION}}', _this._nls.orientation);\n            _this.replaceString(document.body, '{{VERTICAL}}', _this._nls.vertical);\n            _this.replaceString(document.body, '{{HORIZONTAL}}', _this._nls.horizontal);\n            _this.replaceString(document.body, '{{STYLE}}', _this._nls.style.title);\n            _this.replaceString(document.body, '{{MAP_STYLE}}', _this._nls.style.mapStyle);\n            _this.replaceString(document.body, '{{STYLE_STD}}', _this._nls.style.std);\n            _this.replaceString(document.body, '{{STYLE_TRAVEL}}', _this._nls.style.travel);\n            _this.replaceString(document.body, '{{STYLE_FRAME}}', _this._nls.style.frame);\n            _this.replaceString(document.body, '{{STYLE_PURE}}', _this._nls.style.pure);\n            _this.replaceString(document.body, '{{STYLE_PANTONE}}', _this._nls.style.pantone);\n            _this.replaceString(document.body, '{{STYLE_MAP}}', _this._nls.style.map);\n            _this.replaceString(document.body, '{{STYLE_WINDOW}}', _this._nls.style.window);\n            _this.replaceString(document.body, '{{STYLE_AIR}}', _this._nls.style.air);\n            _this.replaceString(document.body, '{{STYLE_HIPSTER}}', _this._nls.style.hipster);\n            _this.replaceString(document.body, '{{DARK_THEME}}', _this._nls.style.darkTheme);\n            _this.replaceString(document.body, '{{UP_TEXT}}', _this._nls.style.upText);\n            _this.replaceString(document.body, '{{TEXT}}', _this._nls.text.title);\n            _this.replaceString(document.body, '{{MAP_TITLE}}', _this._nls.text.mapTitle);\n            _this.replaceString(document.body, '{{MAP_TITLE_PLACEHOLDER}}', _this._nls.text.mapTitlePlaceholder);\n            _this.replaceString(document.body, '{{MAP_SUBTITLE}}', _this._nls.text.mapSubtitle);\n            _this.replaceString(document.body, '{{MAP_SUBTITLE_PLACEHOLDER}}', _this._nls.text.mapSubtitlePlaceholder);\n            _this.replaceString(document.body, '{{MAP_COMMENT}}', _this._nls.text.mapComment);\n            _this.replaceString(document.body, '{{MAP_COMMENT_PLACEHOLDER}}', _this._nls.text.mapCommentPlaceholder);\n            _this.replaceString(document.body, '{{EXPORT}}', _this._nls[\"export\"].title);\n            _this.replaceString(document.body, '{{EXPORT_DIMENSION}}', _this._nls[\"export\"].dimension);\n            _this.replaceString(document.body, '{{EXPORT_AT}}', _this._nls[\"export\"].at);\n            _this.replaceString(document.body, '{{EXPORT_FORMAT}}', _this._nls[\"export\"].format);\n            _this.replaceString(document.body, '{{EXPORT_BUTTON}}', _this._nls[\"export\"].button);\n            _this.replaceString(document.body, '{{CREDITS}}', _this._nls[\"export\"].credits);\n            resolve();\n          })[\"catch\"](reject);\n        })[\"catch\"](reject);\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _initMap\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * The <code>_initInterface()</code> method will create the Leaflet map and insert it to the DOM.\r\n     * It will then handle the supported layer (in MapProviders) and will finally update\r\n     * text in poster according to input default values.\r\n     * It returns a promise that is resolved when interface is initialized, or that is\r\n     * rejected there is no Leaflet in the user session (fatal error).\r\n     * </blockquote>\r\n     * @returns {Promise} A resolved or rejected Promise\r\n     **/\n  }, {\n    key: \"_initMap\",\n    value: function _initMap() {\n      var _this2 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._initMap() called');\n      }\n      return new Promise(function (resolve, reject) {\n        try {\n          // Use #map div to inject Leaflet in, use SmoothWheelZoom flags\n          _this2._map = window.L.map('map', {\n            attributionControl: false,\n            zoomSnap: 0,\n            // On resize, all fitBounds to precisely be set\n            scrollWheelZoom: false,\n            // SmoothWheelZoom lib\n            smoothWheelZoom: true,\n            // SmoothWheelZoom lib\n            smoothSensitivity: 1 // SmoothWheelZoom lib\n          }).setView([44.79777779831652, 1.542703666063447], 5);\n          // Search control creation\n          _this2._search = new window.L.Control.Search({\n            url: 'https://nominatim.openstreetmap.org/search?format=json&q={s}',\n            jsonpParam: 'json_callback',\n            propertyName: 'display_name',\n            propertyLoc: ['lat', 'lon'],\n            marker: false,\n            autoCollapse: true,\n            firstTipSubmit: true,\n            textPlaceholder: _this2._nls.search.placeholder,\n            textCancel: _this2._nls.search.cancel,\n            textErr: _this2._nls.search.error\n          });\n          _this2._map.setMaxBounds(window.L.latLngBounds(window.L.latLng(-89.98155760646617, -360), window.L.latLng(89.99346179538875, 360)));\n        } catch (error) {\n          // The only error case is Leaflet doesn't exist here\n          reject(error);\n          return;\n        }\n        // Add default layer in map\n        _utils_MapProviders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].layers[\"Imagery (E)\"].addTo(_this2._map);\n        // Add layer switch radio on bottom right of the map\n        window.L.control.layers(_utils_MapProviders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].layers, _utils_MapProviders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].overlays, {\n          position: 'topright'\n        }).addTo(_this2._map);\n        // Add search command\n        _this2._map.addControl(_this2._search);\n        // Apply default input text to poster, empty object\n        _this2._applyTexts({});\n        // Load user theme overrides\n        var cssTheme = localStorage.getItem('theme');\n        if (cssTheme && JSON.parse(cssTheme)) {\n          _this2._cssTheme = JSON.parse(cssTheme);\n          _this2.applyThemeColor();\n        }\n        // Build scrollbar for aside\n        _this2._scroll = new _utils_ScrollBar_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n          target: document.getElementById('scrollable-aside'),\n          style: {\n            color: '#56d45b',\n            size: '5px',\n            radius: '1px',\n            lowOpacity: '0.5',\n            highOpacity: '1',\n            transitionDuration: '0.1s'\n          }\n        });\n        resolve();\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _initEvents\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * The <code>_initEvents()</code> method will listen to all required events to manipulate the map\r\n     * and to modify the poster style and texts. Those events.\r\n     * It returns a promise that is resolved when interface is initialized. There is no reject case.\r\n     * </blockquote>\r\n     * @returns {Promise} A resolved Promise\r\n     **/\n  }, {\n    key: \"_initEvents\",\n    value: function _initEvents() {\n      var _this3 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._initEvents() called');\n      }\n      return new Promise(function (resolve) {\n        // Orientation\n        document.getElementById('toggle-orientation').addEventListener('click', _this3._toggleCategory.bind(_this3));\n        var orientations = document.getElementById('toggle-orientation-container');\n        for (var i = 0; i < orientations.children.length; ++i) {\n          orientations.children[i].addEventListener('click', _this3._updateMapOrientation.bind(_this3));\n        }\n        // Style\n        document.getElementById('toggle-style').addEventListener('click', _this3._toggleCategory.bind(_this3));\n        var styles = document.getElementById('map-style');\n        for (var _i = 0; _i < styles.children.length; ++_i) {\n          styles.children[_i].addEventListener('click', _this3._updateMapStyle.bind(_this3));\n        }\n        document.getElementById('dark-theme').addEventListener('change', _this3._updateDarkTheme.bind(_this3));\n        document.getElementById('txt-position').addEventListener('change', _this3._updateTextPosition.bind(_this3));\n        document.getElementById('theme-editor').addEventListener('click', _this3._themeEditModal.bind(_this3));\n        // Text modification events (color, style etc.)\n        document.getElementById('toggle-texts').addEventListener('click', _this3._toggleCategory.bind(_this3));\n        document.getElementById('title-color').addEventListener('input', _this3._textColorEdit.bind(_this3));\n        document.getElementById('subtitle-color').addEventListener('input', _this3._textColorEdit.bind(_this3));\n        document.getElementById('comment-color').addEventListener('input', _this3._textColorEdit.bind(_this3));\n        document.getElementById('user-title').addEventListener('input', _this3._applyTexts.bind(_this3));\n        document.getElementById('user-subtitle').addEventListener('input', _this3._applyTexts.bind(_this3));\n        document.getElementById('user-comment').addEventListener('input', _this3._applyTexts.bind(_this3));\n        // Export settings\n        document.getElementById('toggle-export').addEventListener('click', _this3._toggleCategory.bind(_this3));\n        document.getElementById('image-width').addEventListener('input', _this3._updateDimensionLabel.bind(_this3));\n        document.getElementById('map-save').addEventListener('click', _this3._download.bind(_this3));\n        // Update selection buttons\n        var sizes = document.getElementById('size-container');\n        for (var _i2 = 0; _i2 < sizes.children.length; ++_i2) {\n          sizes.children[_i2].addEventListener('click', _this3._updateDimensionClicked.bind(_this3));\n        }\n\n        // Listening to close modal event\n        document.getElementById('modal-overlay').addEventListener('click', _this3._closeModal.bind(_this3));\n        document.getElementById('credit-modal').addEventListener('click', _this3._creditModal.bind(_this3));\n        // Load event on map layers for loaded tiles (to ensure the printing occurs with all map tiles)\n        for (var layer in _utils_MapProviders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].layers) {\n          _utils_MapProviders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].layers[layer].on('load', function () {\n            return _this3._tilesLoaded = true;\n          });\n        }\n        _this3._map.on('move', _this3._updateCommentLabel.bind(_this3));\n        _this3._map.on('baselayerchange', function (e) {\n          _this3._data.layer = e.name;\n        });\n        _this3._search.on('search:locationfound', _this3._searchMatch.bind(_this3));\n        resolve();\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _endStartup\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * This method will hide the print-overlay, and initialize its values\r\n     * for later exports after splash screen.\r\n     * </blockquote>\r\n     **/\n  }, {\n    key: \"_endStartup\",\n    value: function _endStartup() {\n      var _this4 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._endStartup called');\n      }\n      return new Promise(function (resolve) {\n        document.getElementById('print-overlay').style.opacity = 0;\n        setTimeout(function () {\n          document.getElementById('print-overlay').style.zIndex = -1;\n          document.getElementById('print-overlay').children[0].innerHTML = _this4._nls.download.title;\n          document.getElementById('print-overlay').children[1].innerHTML = _this4._nls.download.subtitle;\n          resolve();\n        }, 200);\n      });\n    }\n\n    // ======================================================================= //\n    // ----------------------- Input events callbacks ------------------------ //\n    // ======================================================================= //\n\n    /**\r\n     * @method\r\n     * @name _toggleCategory\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since April 2023\r\n     * @description\r\n     * <blockquote>\r\n     * Expand or colapse a given map modifiers category\r\n     * </blockquote>\r\n     * @param {Event} e - The click event on the category expander/collapser\r\n     **/\n  }, {\n    key: \"_toggleCategory\",\n    value: function _toggleCategory(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._toggleCategory() called with ', e);\n      }\n      var element = document.getElementById(e.target.dataset.id);\n      if (element) {\n        element.classList.toggle('expanded');\n        // Select the span inside h1 if not the one clicked\n        var expandCollapse = e.target;\n        if (expandCollapse.className !== 'toggle') {\n          expandCollapse = expandCollapse.lastElementChild;\n        }\n        // Update expand/collapse text\n        if (element.classList.contains('expanded')) {\n          expandCollapse.innerHTML = '▲';\n        } else {\n          expandCollapse.innerHTML = '▼';\n        }\n        this._scroll.updateScrollbar();\n        requestAnimationFrame(this._scroll.updateScrollbar.bind(this._scroll));\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateMapOrientation\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Will update the poster vertical/horizontal orientation\r\n     * </blockquote>\r\n     * @param {Event} e - The click event on the theme checkbox\r\n     **/\n  }, {\n    key: \"_updateMapOrientation\",\n    value: function _updateMapOrientation(e) {\n      var _this5 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateMapOrientation() called with ', e);\n      }\n      var previousOrientation = '';\n      var orientations = document.getElementById('toggle-orientation-container');\n      for (var i = 0; i < orientations.children.length; ++i) {\n        if (orientations.children[i].classList.contains('selected')) {\n          previousOrientation = orientations.children[i].dataset.orientation;\n          orientations.children[i].classList.remove('selected');\n          break;\n        }\n      }\n      // Update menu, remove previous style from map and add new style to map\n      e.target.classList.add('selected');\n      document.getElementById('map-output').classList.remove(\"\".concat(previousOrientation));\n      document.getElementById('map-output').classList.add(\"\".concat(e.target.dataset.orientation));\n      this._data.orientation = e.target.dataset.orientation; // Update internal data\n      setTimeout(function () {\n        // Transition all .2s avoidance\n        var bounds = _this5._map.getBounds(); // Map bound before scaling\n        _this5._map.invalidateSize();\n        _this5._map.fitBounds(bounds);\n      }, 200);\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateDarkTheme\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Will update the poster with dark or light css theme colors. If colors have been overiden\r\n     * by user, they will properly applied to the poster.\r\n     * </blockquote>\r\n     * @param {Event} e - The change event on the theme checkbox\r\n     **/\n  }, {\n    key: \"_updateDarkTheme\",\n    value: function _updateDarkTheme(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateDarkTheme() called with ', e);\n      }\n      if (e.target.checked) {\n        document.body.classList.remove('light-theme');\n        document.body.classList.add('dark-theme');\n        this._data.darkTheme = true;\n      } else {\n        document.body.classList.remove('dark-theme');\n        document.body.classList.add('light-theme');\n        this._data.darkTheme = false;\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateTextPosition\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Will update the poster text position wether to be top or bottom\r\n     * </blockquote>\r\n     * @param {Event} e - The change event on the up text checkbox\r\n     **/\n  }, {\n    key: \"_updateTextPosition\",\n    value: function _updateTextPosition(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateTextPosition() called with ', e);\n      }\n      if (e.target.checked) {\n        document.getElementById('map-output').classList.add('txt-reverse');\n        this._data.upText = true;\n      } else {\n        document.getElementById('map-output').classList.remove('txt-reverse');\n        this._data.upText = false;\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateMapStyle\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Updates the map style according to the element the user clicked on. All styles\r\n     * are handled in the scss style file.\r\n     * </blockquote>\r\n     * @param {Event} e - The click event on the style button\r\n     **/\n  }, {\n    key: \"_updateMapStyle\",\n    value: function _updateMapStyle(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateMapStyle() called with ', e);\n      }\n      var previousStyle = '';\n      var styles = document.getElementById('map-style');\n      for (var i = 0; i < styles.children.length; ++i) {\n        if (styles.children[i].classList.contains('selected')) {\n          previousStyle = styles.children[i].dataset.style;\n          styles.children[i].classList.remove('selected');\n          break;\n        }\n      }\n      // Update menu, remove previous style from map and add new style to map\n      e.target.classList.add('selected');\n      document.getElementById('map-output').classList.remove(\"\".concat(previousStyle, \"-style\"));\n      document.getElementById('map-output').classList.add(\"\".concat(e.target.dataset.style, \"-style\"));\n      this._data.style = e.target.dataset.style; // Update internal data\n    }\n\n    /**\r\n     * @method\r\n     * @name _applyTexts\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Simply apply the input text to the poster (for title, subtitle and comment)\r\n     * </blockquote>\r\n     **/\n  }, {\n    key: \"_applyTexts\",\n    value: function _applyTexts(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._applyTexts() called with ', e);\n      }\n      document.getElementById('title').innerHTML = document.getElementById('user-title').value;\n      document.getElementById('subtitle').innerHTML = document.getElementById('user-subtitle').value;\n      document.getElementById('comment').innerHTML = document.getElementById('user-comment').value;\n      if (e && e.target && e.target.id === 'user-comment') {\n        this._commentEdited = true;\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _textColorEdit\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Modify the text on map color. Overrides the default theme color\r\n     * </blockquote>\r\n     * @param {Event} e - The input color change\r\n     **/\n  }, {\n    key: \"_textColorEdit\",\n    value: function _textColorEdit(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._textColorEdit() called with ', e);\n      }\n      document.getElementById(e.target.dataset.type).style.color = e.target.value;\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateCommentLabel\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Update the comment with map center coordinates, only if user didn't set a text in comment\r\n     * </blockquote>\r\n     **/\n  }, {\n    key: \"_updateCommentLabel\",\n    value: function _updateCommentLabel() {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateCommentLabel() called');\n      }\n      if (!this._commentEdited) {\n        var c = this._map.getCenter();\n        document.getElementById('comment').innerHTML = \"\".concat(this.precisionRound(c.lat, 3), \"\\xB0N / \").concat(this.precisionRound(c.lng, 3), \"\\xB0 E\");\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateDimensionClicked\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since April 2023\r\n     * @description\r\n     * <blockquote>\r\n     * Update the export resolution slider label and buttons according to a click on a button\r\n     * </blockquote>\r\n     * @param {Event} e - The input event on the size span\r\n     **/\n  }, {\n    key: \"_updateDimensionClicked\",\n    value: function _updateDimensionClicked(e) {\n      var value = 600;\n      if (e.target.dataset.size === 'A2') {\n        value = 4962;\n      } else if (e.target.dataset.size === 'A3') {\n        value = 3509;\n      } else if (e.target.dataset.size === 'A4') {\n        value = 2481;\n      } else if (e.target.dataset.size === 'A5') {\n        value = 1755;\n      } else if (e.target.dataset.size === 'A6') {\n        value = 1242;\n      }\n      this._updateDimensionLabel({\n        target: {\n          value: value,\n          previousElementSibling: document.getElementById('image-width').previousElementSibling,\n          dataset: {\n            height: document.getElementById('image-width').dataset.height\n          }\n        }\n      });\n      document.getElementById('image-width').value = value;\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateDimensionLabel\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Update the export resolution slider label to notify the user the size of the generated\r\n     * poster, at 300 DPI.\r\n     * </blockquote>\r\n     * @param {Event} e - The input event on the resolution slider\r\n     **/\n  }, {\n    key: \"_updateDimensionLabel\",\n    value: function _updateDimensionLabel(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateDimensionLabel() called with ', e);\n      }\n      var label = e.target.previousElementSibling;\n      var a = '7';\n      if (e.target.value > 4961) {\n        a = '2';\n      } else if (e.target.value > 3508) {\n        a = '3';\n      } else if (e.target.value > 2480) {\n        a = '4';\n      } else if (e.target.value > 1754) {\n        a = '5';\n      } else if (e.target.value > 1241) {\n        a = '6';\n      }\n      // Update label with slider value, computed height and matching paper format\n      var height = this.precisionRound(e.target.value * 29.7 / 21, 0);\n      e.target.dataset.height = height;\n      if (document.getElementById('map-output').classList.contains('horizontal')) {\n        label.innerHTML = \"\".concat(this._nls[\"export\"].dimension, \" : \").concat(height, \" x \").concat(e.target.value, \" \\u2014 A\").concat(a, \" \").concat(this._nls[\"export\"].at, \" 300dpi\");\n      } else {\n        label.innerHTML = \"\".concat(this._nls[\"export\"].dimension, \" : \").concat(e.target.value, \" x \").concat(height, \" \\u2014 A\").concat(a, \" \").concat(this._nls[\"export\"].at, \" 300dpi\");\n      }\n      // Update selection buttons\n      var sizes = document.getElementById('size-container');\n      for (var i = 0; i < sizes.children.length; ++i) {\n        if (sizes.children[i].dataset.size === \"A\".concat(a)) {\n          sizes.children[i].classList.add('selected');\n        } else {\n          sizes.children[i].classList.remove('selected');\n        }\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _searchMatch\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since November 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Set map view depending on search result\r\n     * </blockquote>\r\n     * @param {Object} data - The search data result to set view from\r\n     **/\n  }, {\n    key: \"_searchMatch\",\n    value: function _searchMatch(data) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._searchMatch() called with ', data);\n      }\n      this._map.setView(data.latlng, 11.5);\n    }\n\n    /**\r\n     * @method\r\n     * @name _updateLang\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since November 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Updates the user interface language according to credit select value then reload page\r\n     * </blockquote>\r\n     * @param {Event} e - The input event on the select input\r\n     **/\n  }, {\n    key: \"_updateLang\",\n    value: function _updateLang(e) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._updateLang() called with ', e);\n      }\n      localStorage.setItem('lang', e.target.value);\n      window.location.reload();\n    }\n\n    // ======================================================================= //\n    // ------------------ Printing and downloading methods ------------------- //\n    // ======================================================================= //\n\n    /**\r\n     * @method\r\n     * @name _download\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Start the download routine. First, hide the app with a loading overlay,\r\n     * then apply the user output dimension (set from the slider) to scale the\r\n     * poster to its final dimension, then ensure all tiles are loaded before\r\n     * starting html2canvas on that DIV. Finally, export to disk the canvas to\r\n     * image and restore the DOM to its initial size and scale.\r\n     * </blockquote>\r\n    **/\n  }, {\n    key: \"_download\",\n    value: function _download() {\n      var _this6 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._download() called');\n      }\n      document.getElementById('print-overlay').style.zIndex = 99;\n      document.getElementById('print-overlay').style.opacity = 1;\n      document.getElementById('map-output').style.transition = 'none';\n      setTimeout(function () {\n        // First we get the user desired size\n        var size = document.getElementById('image-width').value;\n        var scale = size / 600;\n        if (document.getElementById('map-output').classList.contains('horizontal')) {\n          var height = document.getElementById('image-width').dataset.height;\n          scale = height / 600;\n          size = height;\n        }\n        var bounds = _this6._map.getBounds(); // Map bound before scaling\n        // Scale map elements according to user desired size\n        _this6._dlPrepareMap(size, scale, bounds);\n        // setInterval on mapPrint to ensure tiles are loaded before downloading (tilesLoaded flag)\n        if (scale === 1) {\n          _this6._tilesLoaded = true;\n        } // Set tiles loaded if no upscale is requested on export\n        // Set tiles loaded flag to false to wait for reframe to occur\n        _this6._intervalId = setInterval(_this6._dlPerformMapPrint.bind(_this6, bounds), 2000);\n      }, 200);\n    }\n\n    /**\r\n     * @method\r\n     * @name _dlPrepareMap\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Before starting the downloading of the poster, the map must be scaled in order to\r\n     * honor the requested dimension. To do so, the map-output div is scaled according to the\r\n     * slider position, and the leaflet map is properly positionned to keep the user's viewport,\r\n     * not matter the upscale it request (there is a limitation with maxZoom of the map, which\r\n     * can not be overpassed).\r\n     * </blockquote>\r\n     * @param {Number} width - The poster width to use\r\n     * @param {Number} scale - The poster scale compared to the classical 600px wide one\r\n     * @param {Object} bounds - The map bounds requested for the printing\r\n    **/\n  }, {\n    key: \"_dlPrepareMap\",\n    value: function _dlPrepareMap(size, scale, bounds) {\n      var _this7 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._dlPrepareMap() : Prepare map style for printing');\n      }\n      document.getElementById('print-status').innerHTML = this._nls.download.stylePrep;\n      document.getElementById('print-progress').style.width = '10%';\n      // Hide Leaflet.js overlays\n      document.querySelector('.leaflet-top.leaflet-left').style.display = 'none';\n      document.querySelector('.leaflet-top.leaflet-right').style.display = 'none';\n      // Scale CSS variables\n      var cssVars = {\n        padding: parseInt(window.getComputedStyle(document.getElementById('map-output')).getPropertyValue('--padding').replace('rem', '')),\n        thickBorder: parseInt(window.getComputedStyle(document.getElementById('map-output')).getPropertyValue('--thick-border').replace('px', '')),\n        smallBorder: parseInt(window.getComputedStyle(document.getElementById('map-output')).getPropertyValue('--small-border').replace('px', ''))\n      };\n      document.getElementById('map-output').style.setProperty('--padding', \"\".concat(cssVars.padding * scale, \"rem\"));\n      document.getElementById('map-output').style.setProperty('--thick-border', \"\".concat(cssVars.thickBorder * scale, \"px\"));\n      document.getElementById('map-output').style.setProperty('--small-border', \"\".concat(cssVars.smallBorder * scale, \"px\"));\n      document.body.style.fontSize = \"\".concat(1.2 * scale, \"rem\");\n      // Scale map dimension and attributes\n      if (document.getElementById('map-output').classList.contains('horizontal')) {\n        document.getElementById('map-output').style.height = \"\".concat(size, \"px\");\n      } else {\n        document.getElementById('map-output').style.width = \"\".concat(size, \"px\");\n      }\n      if (document.body.clientWidth < 1150) {\n        document.querySelector('.user-text-wrapper').style.fontSize = 'inherit';\n      }\n      document.getElementById('map-output').style.position = 'absolute';\n      // Remove box shadow from map container\n      document.getElementById('map-output').classList.remove('shadow');\n      document.getElementById('map-output').style.boxShadow = 'none';\n      requestAnimationFrame(function () {\n        _this7._map.invalidateSize();\n        _this7._map.fitBounds(bounds, {\n          duration: 0\n        });\n        if (CONST.DEBUG) {\n          console.log('MesseMap._dlPrepareMap() : Waiting for map tiles to load');\n        }\n        document.getElementById('print-status').innerHTML = _this7._nls.download.tileLoad;\n        document.getElementById('print-progress').style.width = '25%';\n        _this7._tilesLoaded = false;\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _dlPerformMapPrint\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * The method will perform its logic only if all tiles are loaded. If so, it will use html2canvas library\r\n     * to perform a conversion between poster into a canvas that will be later used to save the poster\r\n     * to the user disk. Call this method in a setInterval to regulary test if tiles are loaded.\r\n     * </blockquote>\r\n     * @param {Object} bounds - The map bounds requested for the printing (here just to be passe to _dlRestoreMap())\r\n    **/\n  }, {\n    key: \"_dlPerformMapPrint\",\n    value: function _dlPerformMapPrint(bounds) {\n      var _this8 = this;\n      // Perform map print with html2canvas if all tiles are loaded\n      if (this._tilesLoaded === true) {\n        if (CONST.DEBUG) {\n          console.log('MesseMap._dlPerformMapPrint() : Map tiles loaded, performing printing');\n        }\n        document.getElementById('print-status').innerHTML = this._nls.download.printStart;\n        document.getElementById('print-progress').style.width = '66%';\n        clearInterval(this._intervalId);\n        requestAnimationFrame(function () {\n          // Execute html2canvas with output div\n          window.html2canvas(document.getElementById('map-output'), {\n            proxy: '/proxy',\n            logging: CONST.DEBUG,\n            width: document.getElementById('map-output').offsetWidth,\n            height: document.getElementById('map-output').offsetHeight,\n            imageTimeout: 0,\n            onclone: function onclone() {\n              document.getElementById('print-status').innerHTML = _this8._nls.download.outputFile;\n              document.getElementById('print-progress').style.width = '72%';\n            }\n          }).then(_this8._dlMap.bind(_this8, bounds))[\"catch\"](function (error) {\n            console.error(error);\n            _this8._dlRestoreMap(bounds);\n          });\n        });\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _dlMap\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * The method will export the canvas previously drawn to the user disk, with the\r\n     * curently selected format in the aside. (using jsPDF if so, otherwise, classical href with dataUrl)\r\n     * </blockquote>\r\n     * @param {Object} bounds - The map bounds requested for the printing (here just to be passe to _dlRestoreMap())\r\n     * @param {Object} canvas - The canvas that holds the poster data to be exported to disk\r\n    **/\n  }, {\n    key: \"_dlMap\",\n    value: function _dlMap(bounds, canvas) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._dlMap() : Canvas printing done, exporting image to disk');\n      }\n      document.getElementById('print-status').innerHTML = this._nls.download.saveToDisk;\n      document.getElementById('print-progress').style.width = '88%';\n      var file = this.getOutputFileType();\n      var link = document.createElement('A');\n      link.download = \"\".concat(document.getElementById('title').innerHTML, \".\").concat(file.extension);\n      if (file.type === 'pdf') {\n        var pageFormat = document.getElementById('image-width-label').innerHTML.split('—')[1].replace(' ', '').substring(0, 2);\n        var pdf = new jsPDF({\n          orientation: document.getElementById('map-output').classList.contains('horizontal') ? 'landscape' : 'portrait',\n          format: pageFormat,\n          precision: 32\n        });\n        var width = pdf.internal.pageSize.getWidth();\n        var height = pdf.internal.pageSize.getHeight();\n        pdf.addImage(canvas.toDataURL('image/png', 1.0), 'PNG', 0, 0, width, height);\n        pdf.save(\"\".concat(document.getElementById('title').innerHTML, \".pdf\"));\n      } else {\n        link.href = canvas.toDataURL(\"image/\".concat(file.type), 1.0);\n        link.click();\n      }\n      // Send data parameters to server after user download\n      this._sendImageParameters();\n      // Restore map to default value\n      this._dlRestoreMap(bounds);\n    }\n\n    /**\r\n     * @method\r\n     * @name _dlRestoreMap\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * When the poster downloading is done, this method is called to cleanup the map\r\n     * and to restore it to its default size to be then used again.\r\n     * </blockquote>\r\n     * @param {Object} bounds - The map bounds requested for the printing to restore the map with proper viewport\r\n     **/\n  }, {\n    key: \"_dlRestoreMap\",\n    value: function _dlRestoreMap(bounds) {\n      var _this9 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._dlRestoreMap() : Restoring map style to default');\n      }\n      document.getElementById('print-status').innerHTML = this._nls.download.restoreMap;\n      document.getElementById('print-progress').style.width = '100%';\n      // Restore Leaflet.js overlays\n      document.querySelector('.leaflet-top.leaflet-left').style.display = 'inherit';\n      document.querySelector('.leaflet-top.leaflet-right').style.display = 'inherit';\n      document.body.style.fontSize = \"1.2rem\";\n      // Restore map inline styles and variables\n      if (document.body.clientWidth < 1150) {\n        document.querySelector('.user-text-wrapper').style.fontSize = '50%';\n      }\n      document.getElementById('map-output').style = '';\n      // Restore map container box shadow\n      document.getElementById('map-output').classList.add('shadow');\n      // Remove print overlay\n      document.getElementById('print-overlay').style.opacity = 0;\n      setTimeout(function () {\n        document.getElementById('print-overlay').style.zIndex = -1;\n        _this9._map.invalidateSize();\n        _this9._map.fitBounds(bounds);\n        document.getElementById('map-output').style.transition = 'all .2s';\n        document.getElementById('print-progress').style.width = '0';\n        if (CONST.DEBUG) {\n          console.log('Map properly restored');\n        }\n      }, 200);\n    }\n\n    /**\r\n     * @method\r\n     * @name _sendImageParameters\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since April 2023\r\n     * @description\r\n     * <blockquote>\r\n     * Perform a POST call to the server to save map parameters as JSON\r\n     * </blockquote>\r\n     **/\n  }, {\n    key: \"_sendImageParameters\",\n    value: function _sendImageParameters() {\n      // Discrete saving, no then/catch as error is handled in backend log.\n      fetch('/upload', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.formatImageParameters())\n      });\n    }\n\n    // ======================================================================= //\n    // --------------------------- Modal methods ----------------------------- //\n    // ======================================================================= //\n\n    /**\r\n     * @method\r\n     * @name _themeEditModal\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * This method will build th theme edit modal into the user interface.\r\n     * </blockquote>\r\n     * @param {Event} e - The click event that triggered the modal\r\n     **/\n  }, {\n    key: \"_themeEditModal\",\n    value: function _themeEditModal(e) {\n      var _this10 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._themeEditModal() called with ', e);\n      }\n      e.preventDefault();\n      this._fetchModal('themeedit').then(function (dom) {\n        var _updateInputs = function _updateInputs() {\n          document.getElementById('light-bg-color').value = _this10._cssTheme.lbg;\n          document.getElementById('light-txt-color').value = _this10._cssTheme.ltxt;\n          document.getElementById('light-txt-alt-color').value = _this10._cssTheme.lcom;\n          document.getElementById('dark-bg-color').value = _this10._cssTheme.dbg;\n          document.getElementById('dark-txt-color').value = _this10._cssTheme.dtxt;\n          document.getElementById('dark-txt-alt-color').value = _this10._cssTheme.dcom;\n        };\n        var _updateColor = function _updateColor(e) {\n          document.querySelector(':root').style.setProperty(\"--color-\".concat(e.target.dataset.key), e.target.value);\n          _this10.updateThemeColorInternal();\n        };\n        // Color input Listeners\n        dom.querySelector('#light-bg-color').addEventListener('input', _updateColor);\n        dom.querySelector('#light-txt-color').addEventListener('input', _updateColor);\n        dom.querySelector('#light-txt-alt-color').addEventListener('input', _updateColor);\n        dom.querySelector('#dark-bg-color').addEventListener('input', _updateColor);\n        dom.querySelector('#dark-txt-color').addEventListener('input', _updateColor);\n        dom.querySelector('#dark-txt-alt-color').addEventListener('input', _updateColor);\n        // Apply current theme\n        _this10.updateThemeColorInternal();\n        // Close modal button event\n        dom.querySelector('#close').addEventListener('click', _this10._closeModal.bind(_this10, null, true));\n        dom.querySelector('#reset').addEventListener('click', function () {\n          _this10._cssTheme.lbg = '#FFFFFE';\n          _this10._cssTheme.ltxt = '#000001';\n          _this10._cssTheme.lcom = '#999998';\n          _this10._cssTheme.dbg = '#000001';\n          _this10._cssTheme.dtxt = '#FFFFFE';\n          _this10._cssTheme.dcom = '#999998';\n          _this10.applyThemeColor();\n          _updateInputs();\n        });\n        // Modal start animation (close animation handled in _closeModal())\n        document.getElementById('modal-overlay').appendChild(dom);\n        document.getElementById('modal-overlay').style.display = 'flex';\n        setTimeout(function () {\n          return document.getElementById('modal-overlay').style.opacity = 1;\n        }, 50);\n        requestAnimationFrame(function () {\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_TITLE}}', _this10._nls.theme.title);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LIGHT_THEME}}', _this10._nls.theme.lightTheme);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_DARK_THEME}}', _this10._nls.theme.darkTheme);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_BG_LIGHT}}', _this10._nls.theme.bg);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_TXT_LIGHT}}', _this10._nls.theme.txt);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_TXTALT_LIGHT}}', _this10._nls.theme.txtAlt);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_BG_DARK}}', _this10._nls.theme.bg);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_TXT_DARK}}', _this10._nls.theme.txt);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_TXTALT_DARK}}', _this10._nls.theme.txtAlt);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_RESET}}', _this10._nls.theme[\"default\"]);\n          _this10.replaceString(document.getElementById('modal-overlay'), '{{MODAL_CLOSE}}', _this10._nls.action.close);\n          _updateInputs();\n        });\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _creditModal\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * This method will build the credit modal into the user interface.\r\n     * </blockquote>\r\n     * @param {Event} e - The click event that triggered the modal\r\n     **/\n  }, {\n    key: \"_creditModal\",\n    value: function _creditModal(e) {\n      var _this11 = this;\n      if (CONST.DEBUG) {\n        console.log('MesseMap._creditModal() called with ', e);\n      }\n      e.preventDefault();\n      this._fetchModal('credits').then(function (dom) {\n        // Modal start animation (close animation handled in _closeModal())\n        document.getElementById('modal-overlay').appendChild(dom);\n        document.getElementById('modal-overlay').style.display = 'flex';\n        setTimeout(function () {\n          return document.getElementById('modal-overlay').style.opacity = 1;\n        }, 50);\n        requestAnimationFrame(function () {\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_TITLE}}', \"\".concat(_this11._nls.title, \" \\u2013 \").concat(CONST.VERSION));\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LINE1}}', _this11._nls.credit.line1);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LINE2}}', _this11._nls.credit.line2);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LINE3}}', _this11._nls.credit.line3);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LINE4}}', _this11._nls.credit.line4);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LINE5}}', _this11._nls.credit.line5);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_LANG}}', _this11._nls.credit.lang);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_FR}}', _this11._nls.credit.fr);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_EN}}', _this11._nls.credit.en);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_ES}}', _this11._nls.credit.es);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_DE}}', _this11._nls.credit.de);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_IT}}', _this11._nls.credit.it);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_PT}}', _this11._nls.credit.pt);\n          _this11.replaceString(document.getElementById('modal-overlay'), '{{MODAL_CLOSE}}', _this11._nls.action.close);\n          // Lang update\n          document.getElementById('lang').value = _this11._lang;\n          document.getElementById('lang').addEventListener('change', _this11._updateLang.bind(_this11));\n          // Close modal button event\n          document.getElementById('close').addEventListener('click', _this11._closeModal.bind(_this11, null, true));\n        });\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _fetchModal\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * This method will use the fetch API to request the modal HTMl file\r\n     * stored in project <code>assets/html</code>.\r\n     * </blockquote>\r\n     * @param {String} url - The modal filename with no extension in /assets/html/\r\n     * @returns {Promise} A resolved or rejected Promise\r\n     **/\n  }, {\n    key: \"_fetchModal\",\n    value: function _fetchModal(url) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._fetchModal() called with ', url);\n      }\n      return new Promise(function (resolve) {\n        fetch(\"assets/html/\".concat(url, \".html\")).then(function (data) {\n          data.text().then(function (html) {\n            resolve(document.createRange().createContextualFragment(html));\n          });\n        });\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _closeModal\r\n     * @private\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Click on overlay callback event to test if modal needs to be closed. It can be\r\n     * bypassed with a flag to close modal no matter the context.\r\n     * </blockquote>\r\n     * @param {Event} event - The click event\r\n     * @param {Boolean} force - Pass it to true to close the modal no matter the context\r\n     **/\n  }, {\n    key: \"_closeModal\",\n    value: function _closeModal(event, force) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap._closeModal() called with ', event, 'force : ', force);\n      }\n      if (force === true || event.target.id === 'modal-overlay' || event.target.id.indexOf('close') !== -1) {\n        document.getElementById('modal-overlay').style.opacity = 0;\n        setTimeout(function () {\n          document.getElementById('modal-overlay').style.display = 'none';\n          document.getElementById('modal-overlay').innerHTML = '';\n        }, 300);\n      }\n    }\n\n    // ======================================================================= //\n    // ----------------------- Generic utils methods ------------------------- //\n    // ======================================================================= //\n\n    /**\r\n     * @method\r\n     * @name getOutputFileType\r\n     * @public\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Read DOM fieldset for output format, and return as Object the extension and type to be\r\n     * used when calling <code>toDataURL()</code> on output canvas with proper parameters.\r\n     * </blockquote>\r\n     * @returns {Object} An object that contains extension and type string for selected output type\r\n     **/\n  }, {\n    key: \"getOutputFileType\",\n    value: function getOutputFileType() {\n      if (CONST.DEBUG) {\n        console.log('MesseMap.getOutputFileType() called');\n      }\n      var file = {\n        extension: 'png',\n        type: 'png'\n      };\n      Array.from(document.getElementById('image-type').elements).forEach(function (el) {\n        if (el.checked === true) {\n          file.extension = el.dataset.extension;\n          file.type = el.dataset.type;\n        }\n      });\n      return file;\n    }\n\n    /**\r\n     * @method\r\n     * @name precisionRound\r\n     * @public\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Do a Math.round with a given precision (ie amount of integers after the coma).\r\n     * </blockquote>\r\n     * @param {Nunmber} value - The value to precisely round\r\n     * @param {Number} precision - The number of integers after the coma\r\n     * @return {Number} - The rounded value\r\n     **/\n  }, {\n    key: \"precisionRound\",\n    value: function precisionRound(value, precision) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap.precisionRound() called with ', value, 'precision : ', precision);\n      }\n      var multiplier = Math.pow(10, precision || 0);\n      return Math.round(value * multiplier) / multiplier;\n    }\n\n    /**\r\n     * @method\r\n     * @name updateThemeColorInternal\r\n     * @public\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Get css color and saves them to local storage\r\n     * </blockquote>\r\n     **/\n  }, {\n    key: \"updateThemeColorInternal\",\n    value: function updateThemeColorInternal() {\n      if (CONST.DEBUG) {\n        console.log('MesseMap.updateThemeColorInternal() called');\n      }\n      // Update input.color values\n      this._cssTheme = {\n        lbg: window.getComputedStyle(document.querySelector(':root')).getPropertyValue('--color-l-bg'),\n        ltxt: window.getComputedStyle(document.querySelector(':root')).getPropertyValue('--color-l-txt'),\n        lcom: window.getComputedStyle(document.querySelector(':root')).getPropertyValue('--color-l-txt-alt'),\n        dbg: window.getComputedStyle(document.querySelector(':root')).getPropertyValue('--color-d-bg'),\n        dtxt: window.getComputedStyle(document.querySelector(':root')).getPropertyValue('--color-d-txt'),\n        dcom: window.getComputedStyle(document.querySelector(':root')).getPropertyValue('--color-d-txt-alt')\n      };\n      localStorage.setItem('theme', JSON.stringify(this._cssTheme));\n    }\n\n    /**\r\n     * @method\r\n     * @name applyThemeColor\r\n     * @public\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Apply the css variables values to the root style from internal _cssTheme object\r\n     * </blockquote>\r\n     **/\n  }, {\n    key: \"applyThemeColor\",\n    value: function applyThemeColor() {\n      if (CONST.DEBUG) {\n        console.log('MesseMap.applyThemeColor() called');\n      }\n      document.querySelector(':root').style.setProperty('--color-l-bg', this._cssTheme.lbg);\n      document.querySelector(':root').style.setProperty('--color-l-txt', this._cssTheme.ltxt);\n      document.querySelector(':root').style.setProperty('--color-l-txt-alt', this._cssTheme.lcom);\n      document.querySelector(':root').style.setProperty('--color-d-bg', this._cssTheme.dbg);\n      document.querySelector(':root').style.setProperty('--color-d-txt', this._cssTheme.dtxt);\n      document.querySelector(':root').style.setProperty('--color-d-txt-alt', this._cssTheme.dcom);\n      this.updateThemeColorInternal();\n    }\n\n    /**\r\n     * @method\r\n     * @name replaceString\r\n     * @public\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since October 2022\r\n     * @description\r\n     * <blockquote>\r\n     * Will replace the element text. Useful for translations.\r\n     * </blockquote>\r\n     * @param {Nunmber} element - The DOM element for text to be replaced\r\n     * @param {Number} string - The string to replace\r\n     * @param {Number} value - The value to apply to the replaced text\r\n     **/\n  }, {\n    key: \"replaceString\",\n    value: function replaceString(element, string, value) {\n      if (CONST.DEBUG) {\n        console.log('MesseMap.replaceString() called with ', element, 'string : ', string, 'value : ', value);\n      }\n      element.innerHTML = element.innerHTML.replace(string, value);\n    }\n\n    /**\r\n     * @method\r\n     * @name formatImageParameters\r\n     * @public\r\n     * @memberof MesseMap\r\n     * @author Arthur Beaulieu\r\n     * @since April 2023\r\n     * @description\r\n     * <blockquote>\r\n     * Will format all map parameters into a JSON object ready to send\r\n     * </blockquote>\r\n     * @return {Object} - The map parameters\r\n     **/\n  }, {\n    key: \"formatImageParameters\",\n    value: function formatImageParameters() {\n      return {\n        style: {\n          orientation: this._data.orientation,\n          style: this._data.style,\n          darkTheme: this._data.darkTheme,\n          upText: this._data.upText,\n          colors: this._cssTheme\n        },\n        text: {\n          title: document.getElementById('user-title').value,\n          subtitle: document.getElementById('user-subtitle').value,\n          comment: document.getElementById('user-comment').value\n        },\n        map: {\n          layer: this._data.layer,\n          center: this._map.getCenter(),\n          zoom: this._map.getZoom()\n        },\n        \"export\": {\n          width: document.getElementById('image-width').value,\n          height: document.getElementById('image-width').dataset.height,\n          filtetype: this.getOutputFileType()\n        }\n      };\n    }\n  }]);\n  return MesseMap;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MesseMap);\n\n//# sourceURL=webpack://MesseMap/./src/js/MesseMap.js?");

/***/ }),

/***/ "./src/js/utils/MapProviders.js":
/*!**************************************!*\
  !*** ./src/js/utils/MapProviders.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar params = {\n  osm: {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    minZoom: 2,\n    maxZoom: 19\n  },\n  esri: {\n    attribution: 'Map tiles by <a href=\"https://www.esri.com/\">Esri</a> &mdash; Map data &copy; Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n    minZoom: 2,\n    maxZoom: 18\n  },\n  carto: {\n    attribution: 'Map tiles by <a href=\"https://carto.com/attributions\">Carto</a> under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    subdomains: 'abcd',\n    minZoom: 2,\n    maxZoom: 20\n  },\n  stamen: {\n    attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a> under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    minZoom: 2,\n    maxZoom: 16\n  },\n  mapiful: {\n    attribution: 'Map tiles by <a href=\"http://mapiful.com\">Mapiful</a> under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a> &mdash; Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n    minZoom: 2,\n    maxZoom: 21\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  layers: {\n    'OpenStreetMap': window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', params.osm),\n    'Imagery (E)': window.L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', params.esri),\n    'Voyager (C)': window.L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}{r}.png', params.carto),\n    'Positron (C)': window.L.tileLayer('https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png', params.carto),\n    'Dark Matter (C)': window.L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png', params.carto),\n    'OldSchool (M)': window.L.tileLayer('https://tiles.mapiful.com/oldschool/{z}/{x}/{y}.png', params.mapiful),\n    'Nara (M)': window.L.tileLayer('https://tiles.mapiful.com/nara/{z}/{x}/{y}.png', params.mapiful),\n    'Playroom (M)': window.L.tileLayer('https://tiles.mapiful.com/playroom/{z}/{x}/{y}.png', params.mapiful),\n    'Orange (M)': window.L.tileLayer('https://tiles.mapiful.com/mother/{z}/{x}/{y}.png', params.mapiful),\n    'Mono (M)': window.L.tileLayer('https://tiles.mapiful.com/mono/{z}/{x}/{y}.png', params.mapiful),\n    'Mono Inverted (M)': window.L.tileLayer('https://tiles.mapiful.com/inverted/{z}/{x}/{y}.png', params.mapiful),\n    'Gold (M)': window.L.tileLayer('https://tiles.mapiful.com/gold/{z}/{x}/{y}.png', params.mapiful),\n    'Asphalt (M)': window.L.tileLayer('https://tiles.mapiful.com/asphalt/{z}/{x}/{y}.png', params.mapiful),\n    'Lagoon (M)': window.L.tileLayer('https://tiles.mapiful.com/lagoon/{z}/{x}/{y}.png', params.mapiful),\n    'Blue (M)': window.L.tileLayer('https://tiles.mapiful.com/blue/{z}/{x}/{y}.png', params.mapiful),\n    'Sky (M)': window.L.tileLayer('https://tiles.mapiful.com/sky/{z}/{x}/{y}.png', params.mapiful),\n    'Spring (M)': window.L.tileLayer('https://tiles.mapiful.com/spring/{z}/{x}/{y}.png', params.mapiful),\n    'Red (M)': window.L.tileLayer('https://tiles.mapiful.com/red/{z}/{x}/{y}.png', params.mapiful),\n    'Gaia (M)': window.L.tileLayer('https://tiles.mapiful.com/gaia/{z}/{x}/{y}.png', params.mapiful),\n    'Coral (M)': window.L.tileLayer('https://tiles.mapiful.com/coral/{z}/{x}/{y}.png', params.mapiful),\n    'Pink (M)': window.L.tileLayer('https://tiles.mapiful.com/valentine/{z}/{x}/{y}.png', params.mapiful),\n    'Purple (M)': window.L.tileLayer('https://tiles.mapiful.com/lavender/{z}/{x}/{y}.png', params.mapiful),\n    'Toner (S)': window.L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png', params.stamen),\n    'Watercolor (S)': window.L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png', params.stamen)\n  },\n  overlays: {\n    'Toner Lines (S)': window.L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lines/{z}/{x}/{y}{r}.png', params.stamen)\n  }\n});\n\n//# sourceURL=webpack://MesseMap/./src/js/utils/MapProviders.js?");

/***/ }),

/***/ "./src/js/utils/ScrollBar.js":
/*!***********************************!*\
  !*** ./src/js/utils/ScrollBar.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _scss_ScrollBar_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scss/ScrollBar.scss */ \"./src/scss/ScrollBar.scss\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar ScrollBar = /*#__PURE__*/function () {\n  /**\r\n   * @class\r\n   * @constructor\r\n   * @summary Custom JavaScript ScrollBar for any conatiner\r\n   * @author Arthur Beaulieu\r\n   * @since January 2022\r\n   * @licence GPL-v3.0\r\n   * @description Build a custom ScrollBar according to the given DOM target, inspired from https://github.com/buzinas/simple-scrollbar <3\r\n   * @param {Object} options - The ScrollBar options\r\n   * @param {Object} options.target - The DOM node to add a ScrollBar to\r\n   * @param {Boolean} [options.horizontal=false] - The scrollbar direction, default to vertical\r\n   * @param {Number} [options.minSize=15] - The minimal scrollbar size in pixels\r\n   * @param {Object} [options.style] - The scrollbar style to apply\r\n   * @param {String} [options.style.color='rgb(155, 155, 155)'] - The CSS color\r\n   * @param {String} [options.style.size='10px'] - The scrollbar with or height in px depending on horizontal flag\r\n   * @param {String} [options.style.radius='5px'] - The border radius in px, by default is half the scrollbar width\r\n   * @param {String} [options.style.lowOpacity='.2'] - The scrollbar opacity when not hovered\r\n   * @param {String} [options.style.highOpacity='.8'] - The scrollbar opacity when hovered\r\n   * @param {String} [options.style.transitionDuration='.2'] - The opacity transition duration in seconds\r\n   **/\n  function ScrollBar(options) {\n    _classCallCheck(this, ScrollBar);\n    /**\r\n     * The DOM target element to put a scrollbar on\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._target = options.target;\n    /**\r\n     * Whether the scrollbar should be horizontal or not\r\n     * @type {Boolean}\r\n     * @private\r\n     **/\n    this._horizontal = options.horizontal || false;\n    /**\r\n     * The minimal size in pixels for scrollbar to be\r\n     * @type {Number}\r\n     * @private\r\n     **/\n    this._minSize = options.minSize || 15;\n    /**\r\n     * Optionnal custom style object. Support for color, size, radius, lowOpacity, highOpacity and transitionDuration\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._style = options.style || {};\n    /**\r\n     * The DOM element that will wrap the DOM target content\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._wrapper = {};\n    /**\r\n     * The DOM element that will contain the DOM target content, this DOM element hides the default browser scrollbar\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._container = {};\n    /**\r\n     * The DOM element that hold the custom scrollbar itself\r\n     * @type {Object}\r\n     * @private\r\n     **/\n    this._bar = {};\n    /**\r\n     * Ratio between DOM target and content size, if < 1, it requires a scrollbar\r\n     * @type {Number}\r\n     * @private\r\n     **/\n    this._scrollRatio = 0;\n    /**\r\n     * For horizontal scroll, save the last user X position for position computations\r\n     * @type {Number}\r\n     * @private\r\n     **/\n    this._lastPageX = 0;\n    /**\r\n     * For vertical scroll, save the last user Y position for position computations\r\n     * @type {Number}\r\n     * @private\r\n     **/\n    this._lastPageY = 0;\n    // Component initialization sequence\n    this._init().then(this._events.bind(this)).then(this._updateScrollBar.bind(this));\n  }\n\n  // ======================================================================== //\n  // ---------------------- Component initialization ------------------------ //\n  // ======================================================================== //\n\n  /**\r\n   * @method\r\n   * @name _init\r\n   * @private\r\n   * @memberof ScrollBar\r\n   * @author Arthur Beaulieu\r\n   * @since January 2022\r\n   * @description Build DOM hierrarchy, ScrollBar double wraps the content to append its custom bar\r\n   * @returns {Promise} A Js promise resolved when DOM is fully initialized\r\n   **/\n  _createClass(ScrollBar, [{\n    key: \"_init\",\n    value: function _init() {\n      var _this = this;\n      return new Promise(function (resolve) {\n        var fragment = document.createDocumentFragment();\n        // Creating associated elements (wrapper, container, bar)\n        _this._target.classList.add('scrollbar-container');\n        _this._wrapper = document.createElement('DIV');\n        _this._wrapper.setAttribute('class', 'scrollbar-wrapper');\n        _this._container = document.createElement('DIV');\n        // Append scroll-content class to container\n        if (_this._horizontal === true) {\n          _this._container.setAttribute('class', 'horizontal-scrollbar-content');\n        } else {\n          _this._container.setAttribute('class', 'scrollbar-content');\n        }\n        // Move target children into this new container\n        while (_this._target.firstChild) {\n          _this._container.appendChild(_this._target.firstChild);\n        }\n        // Link DOM elements\n        _this._wrapper.appendChild(_this._container);\n        fragment.appendChild(_this._wrapper);\n        // Append fragment to DOM target\n        _this._target.appendChild(fragment);\n        // Append the scroll depending on scrollbar position\n        if (_this._horizontal === true) {\n          _this._target.insertAdjacentHTML('beforeend', '<div class=\"horizontal-scroll\"></div>'); // Append scroll as last child\n        } else {\n          _this._target.insertAdjacentHTML('beforeend', '<div class=\"scroll\"></div>'); // Append scroll as last child\n        }\n        // Save bar from previously added scroll element\n        _this._bar = _this._target.lastChild;\n        // Style update if user has specified style rules of its own\n        _this.style = _this._style;\n        // DOM initialization is done\n        resolve();\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _events\r\n     * @private\r\n     * @memberof ScrollBar\r\n     * @author Arthur Beaulieu\r\n     * @since January 2022\r\n     * @description Handle ScrollBar mouse events\r\n     * @returns {Promise} A Js promise resolved when all events are registered\r\n     **/\n  }, {\n    key: \"_events\",\n    value: function _events() {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        // Methods auto binding with this to be able to add/remove listeners easily\n        _this2._drag = _this2._drag.bind(_this2);\n        _this2._stopDrag = _this2._stopDrag.bind(_this2);\n        // Listen to window events or container/scrollbar events\n        window.addEventListener('resize', _this2._updateScrollBar.bind(_this2));\n        _this2._container.addEventListener('scroll', _this2._updateScrollBar.bind(_this2));\n        _this2._container.addEventListener('mouseenter', _this2._updateScrollBar.bind(_this2));\n        _this2._bar.addEventListener('mousedown', _this2._barClicked.bind(_this2));\n        // Scrollbar is now ready to be used\n        resolve();\n      });\n    }\n\n    // ======================================================================== //\n    // ----------------------- Dragging mouse events -------------------------- //\n    // ======================================================================== //\n\n    /**\r\n     * @method\r\n     * @name _barClicked\r\n     * @private\r\n     * @memberof ScrollBar\r\n     * @author Arthur Beaulieu\r\n     * @since January 2022\r\n     * @description Add document events when bar is clicked to track the mouse movement in parent\r\n     * @param {Object} event - The Mouse event from this._events()\r\n     **/\n  }, {\n    key: \"_barClicked\",\n    value: function _barClicked(event) {\n      var _this3 = this;\n      if (this._horizontal === true) {\n        this._lastPageX = event.pageX;\n      } else {\n        this._lastPageY = event.pageY;\n      }\n      this._bar.classList.add('scrollbar-grabbed');\n      document.body.classList.add('scrollbar-grabbed');\n      requestAnimationFrame(function () {\n        document.addEventListener('mousemove', _this3._drag);\n        document.addEventListener('mouseup', _this3._stopDrag);\n      });\n    }\n\n    /**\r\n     * @method\r\n     * @name _drag\r\n     * @private\r\n     * @memberof ScrollBar\r\n     * @author Arthur Beaulieu\r\n     * @since January 2022\r\n     * @description Handle the drag animation of the bar\r\n     * @param {Object} event - The Mouse event from this._events()\r\n     **/\n  }, {\n    key: \"_drag\",\n    value: function _drag(event) {\n      var _this4 = this;\n      if (this._horizontal === true) {\n        var delta = event.pageX - this._lastPageX;\n        this._lastPageX = event.pageX;\n        requestAnimationFrame(function () {\n          _this4._container.scrollLeft += delta / _this4._scrollRatio;\n        });\n      } else {\n        var _delta = event.pageY - this._lastPageY;\n        this._lastPageY = event.pageY;\n        requestAnimationFrame(function () {\n          _this4._container.scrollTop += _delta / _this4._scrollRatio;\n        });\n      }\n    }\n\n    /**\r\n     * @method\r\n     * @name _stopDrag\r\n     * @private\r\n     * @memberof ScrollBar\r\n     * @author Arthur Beaulieu\r\n     * @since January 2022\r\n     * @description Remove document events when bar is released\r\n     **/\n  }, {\n    key: \"_stopDrag\",\n    value: function _stopDrag() {\n      this._bar.classList.remove('scrollbar-grabbed');\n      document.body.classList.remove('scrollbar-grabbed');\n      document.removeEventListener('mousemove', this._drag);\n      document.removeEventListener('mouseup', this._stopDrag);\n    }\n\n    // ======================================================================== //\n    // ----------------- Internal size and position update -------------------- //\n    // ======================================================================== //\n\n    /**\r\n     * @method\r\n     * @name _updateScrollBar\r\n     * @private\r\n     * @memberof ScrollBar\r\n     * @author Arthur Beaulieu\r\n     * @since January 2022\r\n     * @description Compute bar position according to DOM measurements\r\n     **/\n  }, {\n    key: \"_updateScrollBar\",\n    value: function _updateScrollBar() {\n      if (this._horizontal === true) {\n        this._updateHorizontalScroll();\n      } else {\n        this._updateVerticalScroll();\n      }\n    }\n  }, {\n    key: \"_updateHorizontalScroll\",\n    value: function _updateHorizontalScroll() {\n      var _this5 = this;\n      var totalWidth = this._container.scrollWidth;\n      var ownWidth = this._container.clientWidth;\n      var bottom = (this._target.clientHeight - this._bar.clientHeight) * -1;\n      this._scrollRatio = ownWidth / totalWidth;\n      requestAnimationFrame(function () {\n        // Hide scrollbar if no scrolling is possible\n        if (_this5._scrollRatio >= 1) {\n          _this5._bar.classList.add('hidden');\n        } else {\n          var width = Math.max(_this5._scrollRatio * 100, _this5._minSize) * ownWidth / 100;\n          var left = _this5._container.scrollLeft / totalWidth * 100 * ownWidth / 100;\n          // ScrollBar has reached its minimum size\n          if (Math.max(_this5._scrollRatio * 100, _this5._minSize) === _this5._minSize) {\n            // Set minSize as width, unless minSize is greater than container client width\n            width = _this5._minSize < ownWidth ? _this5._minSize : ownWidth / 2;\n            /* Here is a complex thing : scroll total height != DOM node total height. We must substract\r\n            a growing percentage (as user goes down) that is scaled after total scroll progress in %. */\n            var scrollProgressPercentage = _this5._container.scrollLeft * 100 / (totalWidth - ownWidth);\n            left = (ownWidth - width) * ((_this5._container.scrollLeft + scrollProgressPercentage * ownWidth / 100) / totalWidth * 100) / 100;\n          }\n          // Update the bar position\n          _this5._bar.classList.remove('hidden');\n          _this5._bar.style.cssText = \"width: \".concat(width, \"px; left: \").concat(left, \"px; bottom: \").concat(bottom, \"px;\");\n        }\n      });\n    }\n  }, {\n    key: \"_updateVerticalScroll\",\n    value: function _updateVerticalScroll() {\n      var _this6 = this;\n      var totalHeight = this._container.scrollHeight;\n      var ownHeight = this._container.clientHeight;\n      var right = (this._target.clientWidth - this._bar.clientWidth) * -1;\n      this._scrollRatio = ownHeight / totalHeight;\n      requestAnimationFrame(function () {\n        // Hide scrollbar if no scrolling is possible\n        if (_this6._scrollRatio >= 1) {\n          _this6._bar.classList.add('hidden');\n          _this6._container.firstElementChild.style.paddingRight = '';\n        } else {\n          _this6._container.firstElementChild.style.paddingRight = '0';\n          var height = Math.max(_this6._scrollRatio * 100, _this6._minSize) * ownHeight / 100;\n          var top = _this6._container.scrollTop / totalHeight * 100 * ownHeight / 100;\n          // ScrollBar has reached its minimum size\n          if (Math.max(_this6._scrollRatio * 100, _this6._minSize) === _this6._minSize) {\n            // Set minSize as height, unless minSize is greater than container client height\n            height = _this6._minSize < ownHeight ? _this6._minSize : ownHeight / 2;\n            /* Here is a complex thing : scroll total height != DOM node total height. We must substract\r\n            a growing percentage (as user goes down) that is scaled after total scroll progress in %. */\n            var scrollProgressPercentage = _this6._container.scrollTop * 100 / (totalHeight - ownHeight);\n            top = (ownHeight - height) * ((_this6._container.scrollTop + scrollProgressPercentage * ownHeight / 100) / totalHeight * 100) / 100;\n          }\n          // Update the bar position\n          _this6._bar.classList.remove('hidden');\n          _this6._bar.style.cssText = \"height: \".concat(height, \"px; top: \").concat(top, \"px; right: \").concat(right, \"px;\");\n        }\n      });\n    }\n\n    // ======================================================================== //\n    // -------------------------- Exposed methods ----------------------------- //\n    // ======================================================================== //\n\n    /**\r\n     * @method\r\n     * @name updateScrollbar\r\n     * @public\r\n     * @memberof ScrollBar\r\n     * @author Arthur Beaulieu\r\n     * @since January 2022\r\n     * @description Manually update the scrollbar\r\n     **/\n  }, {\n    key: \"updateScrollbar\",\n    value: function updateScrollbar() {\n      this._updateScrollBar();\n    }\n\n    /**\r\n     * Updates the scrollbar style. Support for color, size, radius, lowOpacity, highOpacity and transitionDuration\r\n     * @param {Object} style\r\n     **/\n  }, {\n    key: \"style\",\n    set: function set(style) {\n      this._style = style;\n      if (this._style.color) {\n        this._target.style.setProperty('--scroll-color', this._style.color);\n      }\n      if (this._style.size) {\n        this._target.style.setProperty('--scroll-size', this._style.size);\n      }\n      if (this._style.radius) {\n        this._target.style.setProperty('--scroll-radius', this._style.radius);\n      }\n      if (this._style.lowOpacity) {\n        this._target.style.setProperty('--scroll-low-opacity', this._style.lowOpacity);\n      }\n      if (this._style.highOpacity) {\n        this._target.style.setProperty('--scroll-high-opacity', this._style.highOpacity);\n      }\n      if (this._style.transitionDuration) {\n        this._target.style.setProperty('--scroll-transition-duration', this._style.transitionDuration);\n      }\n    }\n  }]);\n  return ScrollBar;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ScrollBar);\n\n//# sourceURL=webpack://MesseMap/./src/js/utils/ScrollBar.js?");

/***/ }),

/***/ "./src/js/utils/SmoothWheelZoom.js":
/*!*****************************************!*\
  !*** ./src/js/utils/SmoothWheelZoom.js ***!
  \*****************************************/
/***/ (() => {

eval("// Thanks buddy https://github.com/mutsuyuki/Leaflet.SmoothWheelZoom\nwindow.L.Map.mergeOptions({\n  // @section Mousewheel options\n  // @option smoothWheelZoom: Boolean|String = true\n  // Whether the map can be zoomed by using the mouse wheel. If passed `'center'`,\n  // it will zoom to the center of the view regardless of where the mouse was.\n  smoothWheelZoom: true,\n  // @option smoothWheelZoom: number = 1\n  // setting zoom speed\n  smoothSensitivity: 1\n});\nwindow.L.Map.SmoothWheelZoom = window.L.Handler.extend({\n  addHooks: function addHooks() {\n    window.L.DomEvent.on(this._map._container, 'wheel', this._onWheelScroll, this);\n  },\n  removeHooks: function removeHooks() {\n    window.L.DomEvent.off(this._map._container, 'wheel', this._onWheelScroll, this);\n  },\n  _onWheelScroll: function _onWheelScroll(e) {\n    if (!this._isWheeling) {\n      this._onWheelStart(e);\n    }\n    this._onWheeling(e);\n  },\n  _onWheelStart: function _onWheelStart(e) {\n    var map = this._map;\n    this._isWheeling = true;\n    this._wheelMousePosition = map.mouseEventToContainerPoint(e);\n    this._centerPoint = map.getSize()._divideBy(2);\n    this._startLatLng = map.containerPointToLatLng(this._centerPoint);\n    this._wheelStartLatLng = map.containerPointToLatLng(this._wheelMousePosition);\n    this._startZoom = map.getZoom();\n    this._moved = false;\n    this._zooming = true;\n    map._stop();\n    if (map._panAnim) {\n      map._panAnim.stop();\n    }\n    this._goalZoom = map.getZoom();\n    this._prevCenter = map.getCenter();\n    this._prevZoom = map.getZoom();\n    this._zoomAnimationId = requestAnimationFrame(this._updateWheelZoom.bind(this));\n  },\n  _onWheeling: function _onWheeling(e) {\n    var map = this._map;\n    this._goalZoom = this._goalZoom + window.L.DomEvent.getWheelDelta(e) * 0.003 * map.options.smoothSensitivity;\n    if (this._goalZoom < map.getMinZoom() || this._goalZoom > map.getMaxZoom()) {\n      this._goalZoom = map._limitZoom(this._goalZoom);\n    }\n    this._wheelMousePosition = this._map.mouseEventToContainerPoint(e);\n    clearTimeout(this._timeoutId);\n    this._timeoutId = setTimeout(this._onWheelEnd.bind(this), 200);\n    window.L.DomEvent.preventDefault(e);\n    window.L.DomEvent.stopPropagation(e);\n  },\n  _onWheelEnd: function _onWheelEnd() {\n    this._isWheeling = false;\n    cancelAnimationFrame(this._zoomAnimationId);\n    this._map._moveEnd(true);\n  },\n  _updateWheelZoom: function _updateWheelZoom() {\n    var map = this._map;\n    if (!map.getCenter().equals(this._prevCenter) || map.getZoom() != this._prevZoom) {\n      return;\n    }\n    this._zoom = map.getZoom() + (this._goalZoom - map.getZoom()) * 0.3;\n    this._zoom = Math.floor(this._zoom * 100) / 100;\n    var delta = this._wheelMousePosition.subtract(this._centerPoint);\n    if (delta.x === 0 && delta.y === 0) {\n      return;\n    }\n    if (map.options.smoothWheelZoom === 'center') {\n      this._center = this._startLatLng;\n    } else {\n      this._center = map.unproject(map.project(this._wheelStartLatLng, this._zoom).subtract(delta), this._zoom);\n    }\n    if (!this._moved) {\n      map._moveStart(true, false);\n      this._moved = true;\n    }\n    map._move(this._center, this._zoom);\n    this._prevCenter = map.getCenter();\n    this._prevZoom = map.getZoom();\n    this._zoomAnimationId = requestAnimationFrame(this._updateWheelZoom.bind(this));\n  }\n});\nwindow.L.Map.addInitHook('addHandler', 'smoothWheelZoom', window.L.Map.SmoothWheelZoom);\n\n//# sourceURL=webpack://MesseMap/./src/js/utils/SmoothWheelZoom.js?");

/***/ }),

/***/ "./src/scss/MesseMap.scss":
/*!********************************!*\
  !*** ./src/scss/MesseMap.scss ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://MesseMap/./src/scss/MesseMap.scss?");

/***/ }),

/***/ "./src/scss/ScrollBar.scss":
/*!*********************************!*\
  !*** ./src/scss/ScrollBar.scss ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://MesseMap/./src/scss/ScrollBar.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/MesseMap.js");
/******/ 	window.MesseMap = __webpack_exports__["default"];
/******/ 	
/******/ })()
;